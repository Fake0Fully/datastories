<<<<<<< Updated upstream
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
if (ncol(no_agents)==2) {
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
} else {
for (i in 2:ncol(no_agents)) {
no_agents[,i] <- as.numeric(no_agents[,i])
no_agents[,i+2] <- NA
no_agents[1,i+2] <- no_agents[1,i]
for (j in 2:nrow(no_agents)) no_agents[j,i+2] <- no_agents[j-1,i+2]+no_agents[j,i]
}
}
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
park_location <- NULL
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
if (ncol(no_agents)==2) {
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
} else {
for (i in 2:ncol(no_agents)) {
no_agents[,i] <- as.numeric(no_agents[,i])
no_agents[,i+2] <- NA
no_agents[1,i+2] <- no_agents[1,i]
for (j in 2:nrow(no_agents)) no_agents[j,i+2] <- no_agents[j-1,i+2]+no_agents[j,i]
}
}
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
park_location <- NULL
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
shiny::runApp()
shiny::runApp()
shiny::runApp()
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
park_location <- c('LB')
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
park_location <- c('carpark')
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
is.null(park_location)
!is.null(park_location)
nrow(temp)
unique(temp$park_location)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
park_location <- c('car_park')
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
nrow(temp)
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
temp
nrow(temp)
unique(temp$park_location)
temp$park_location %in% park_location
if (!is.null(park_location)){
print('yes')
temp <- subset(temp,temp$park_location %in% park_location)
}
View(temp)
temp <- subset(temp,temp$park_location %in% park_location)
park_location <- c('street')
parking <- c('street')
temp <- subset(temp,temp$park_location %in% parking)
temp <- subset(temp,temp$park_location %in% park_location)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
parking <- c('car_park')
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% parking)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
parking <- c('LB')
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% parking)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_date <- c('2015-06-24','2015-06-25','2015-06-26')
input_time <- c('6:00:00','18:00:00')
input_interval <- 50
parking <- c('street')
temp <- dat
temp <- subset(temp, temp$date %in% input_date)
temp <- subset(temp, hour(temp$entry_time)>=6&hour(temp$entry_time)<=18)
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% parking)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
while (max(table(no_agents[,"time"])) >1) {
for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
no_agents <- no_agents[order(no_agents[,"time"] ),]
}
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- data.frame(rep(NA,
length(seq(from = as.POSIXct(paste(input_date[1], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[1], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1))))
names(arrivals_table) <- 'time'
for (i in 1:length(input_date)) {
arrivals_table[,1] <- as.POSIXct(seq(from = as.POSIXct(paste(input_date[i], input_time[1]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
to = as.POSIXct(paste(input_date[i], input_time[2]), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore"),
by=1), format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
arrivals_table <- merge(arrivals_table,no_agents,by='time',all.x=TRUE)
arrivals_table[1,i+1] <- 0
arrivals_table[i+1] <- na.locf(arrivals_table[i+1])
}
rownames(arrivals_table) <- as.POSIXct(arrivals_table[,1],format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
names(arrivals_table) <- c("aaa", format(as.Date(input_date, tz="Asia/Singapore"), format="%B %d %Y"))
arrivals_table <- as.xts(arrivals_table)
arrivals_table <- arrivals_table[,-1]
title_plot <- paste("Number of arrivals per", "minute intervals")
dygraph(arrivals_table, main=title_plot) %>%
dyHighlight(highlightCircleSize = 5, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
shiny::runApp()
shiny::runApp()
shiny::runApp()
=======
aa[1:2000,]
aa[1:1000,]
aa[1:500,]
str(dat)
table(dat[,c("vehicle_type", "es", "xs")])
table(dat[,c("vehicle_type", "xs", "es")])
str(aa)
str(dat)
summary(dat)
table(dat[,c("vehicle_type", "xs", "es")])
is.na(dat$xs)
table(is.na(dat$xs))
table(is.na(dat$es))
table(is.na(dat$vehicle_type))
sum(table(dat[,c("vehicle_type", "xs", "es")]))
table(dat[,c("vehicle_type", "xs", "es")])
unique(dat$date_entry)
aa <- dat[dat[,"date_entry"]=="2016-01-22",c("vehicle_type", "xs", "es", "entry_time", "exit_time")]
aa[1:500,]
table(dat[,c("vehicle_type", "xs", "es")])
aa <- dat[dat[,"date_entry"]=="2016-01-22" & dat[,"es"]=="E3",c("vehicle_type", "xs", "es", "entry_time", "exit_time")]
aa
setwd("/Users/giacomodc/Dropbox/PhD/tampinesRAW")
source("TAMP.R")
create_tamp(unit="mins", passby_threshold=3, qstart=c(0,0)) #or "secs"
tamp <- read.csv("tamp.csv", stringsAsFactors = FALSE, header=T)
tamp[,"date"] <- as.Date(tamp[,"date"], format="%Y-%m-%d")
tamp[,"entry_time"] <- as.POSIXct(tamp[,"entry_time"], format="%Y-%m-%d %H:%M:%S")
tamp[,"exit_time"] <- as.POSIXct(tamp[,"exit_time"], format="%Y-%m-%d %H:%M:%S")
tamp[,"start_handling_time"] <- as.POSIXct(tamp[,"start_handling_time"], format="%Y-%m-%d %H:%M:%S")
tamp[,"stop_handling_time"] <- as.POSIXct(tamp[,"stop_handling_time"], format="%Y-%m-%d %H:%M:%S")
tamp$service
tamp[tamp[,"service"]=="garbage",]
tamp[tamp[,"service"]=="garbage" & !is.na(tamp[,"service"]),]
aa
lb <- dat[dat[,"es"]=="E3",]
str(lb)
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
### LOAD
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
str(dat)
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
head(dat)
lb <- dat[dat[,"es"]=="E3",]
unique(lb$date_entry)
unique(datdate_entry)
unique(dat$date_entry)
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
unique(dat$date_entry)
dat[dat[,"date_entry"]=="1/31/16",]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
### LOAD
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
unique(dat$date_entry)
grep("/3/|/4/|/5/|/6/", "4/1/16")
grep("/3/|/4/|/5/|/6/", "11/3/16")
grepl("/3/|/4/|/5/|/6/", "11/3/16")
grepl("/3/|/4/|/5/|/6/", "18/5/16")
lb <- lb[grepl("/3/|/4/|/5/|/6/", lb[,"date_entry"]),]
lb <- dat[dat[,"es"]=="E3",]
lb <- lb[grepl("/3/|/4/|/5/|/6/", lb[,"date_entry"]),]
unique(lb$date_entry)
lb$date_entry <- as.Date(lb$date_entry, format="%d/%m/%y")
lb$entry_time <- as.POSIXct(lb$entry_time, format="%d/%m/%y %H:%M:%S")
lb$exit_time <- as.POSIXct(lbt$exit_time, format="%d/%m/%y %H:%M:%S")
lb$exit_time <- as.POSIXct(lb$exit_time, format="%d/%m/%y %H:%M:%S")
lb <- lb[order(lb$entry_time),]
str(lb)
?difftime
lb$htime <- difftime(lb$exit_time, lb$entry_time, units = "mins")
lb[,c("parked_time", "htime")]
lb$htime
?round
round(lb$htime, digits = 1)
lb$htime <- round(lb$htime, digits = 1)
lb[,c("parked_time", "htime")]
lb[1,“entry_time“]
lb[1,"entry_time"]
format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H:%M")
format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H")
summary(format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H"))
summary(as.numeric(format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H")))
table(as.numeric(format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H")))
lb$hour <- format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H")
?boxplot
boxplot(htime~as.factor(hour), data=lb)
as.numeric(htime)
as.numeric(lb$htime)
boxplot(as.numeric(htime)~as.factor(hour), data=lb)
plot(as.numeric(lb$htime))
lb$htime <- as.numeric(lb$htime)
lb <- lb[lb[,"htime"]<1000,]
boxplot(htime~as.factor(hour), data=lb)
lb$hour <- as.factor(lb$hour)
by(lb, hour, median)
by(lb, lb$hour, median)
by(lb$htime, lb$hour, median)
str(by(lb$htime, lb$hour, median))
coef(by(lb$htime, lb$hour, median))
by(lb$htime, lb$hour, median)[1]
by(lb$htime, lb$hour, median)[[1]]
coef(by(lb$htime, lb$hour, median)[1])
unlist(by(lb$htime, lb$hour, median))
str(by(lb$htime, lb$hour, median))
unique(lb$hour)
levels(lb$hour)
timeofday <- data.frame()
by(lb$htime, lb$hour, median)[1]
by(lb$htime, lb$hour, median)[1][1]
by(lb$htime, lb$hour, median)[1][[1]]
by(lb$htime, lb$hour, median)[1][[2]]
by(lb$htime, lb$hour, median)[2][[1]]
by(lb$htime, lb$hour, median)[3][[1]]
by(lb$htime, lb$hour, median)[[1]]
by(lb$htime, lb$hour, median)[[2]]
by(lb$htime, lb$hour, median)[[3]]
by(lb$htime, lb$hour, median)[[4]]
by(lb$htime, lb$hour, median)[[5]]
by(lb$htime, lb$hour, median)[[10]]
timeofday <- data.frame()
for (i in 1:length(levels(lb$hour))) timeofday[i, 1] <- by(lb$htime, lb$hour, median)[[i]]
timeofday
levels(lb$hour)
timeofday$hour <- levels(lb$hour)
timeofday
by(lb$htime, lb$hour, median)
0:23
timeofday$hour <- 0:23
plot(timeofday$V1~timeofday$hour)
plot(timeofday$V1~timeofday$hour, type="l")
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
### LOAD
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
str(dat)
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
unique(dat$date_entry)
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
str(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
summary(dat$htime)
dat[is.na(dat[,"htime"]),]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
### LOAD
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat[is.na(dat[,"htime"]),]
dat[is.na(dat[,"exit_time"]),]
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat[is.na(dat[,"htime"]),]
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
str(dat)
lb <- dat[dat[,"es"]=="E3",]
lb$hour <- as.factor(format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H"))
dat[dat[,"htime"]>1000,]
dat <- dat[dat[,"htime"]<1000,]
lb <- dat[dat[,"es"]=="E3",]
lb$hour <- as.factor(format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H"))
timeofday <- data.frame()
for (i in 1:length(levels(lb$hour))) timeofday[i, 1] <- by(lb$htime, lb$hour, median)[[i]]
timeofday$hour <- 0:23
plot(timeofday$V1~timeofday$hour, type="l")
lb$hour
table(lb$hour)
boxplot(htime~as.factor(hour), data=lb)
dat[dat[,"htime"]<0,]
dat[dat[,"htime"]<0,]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
#182 days, 1st Jan 2016 - 30th June 2016
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
dat <- dat[dat[,"htime"]<1000 & dat[,"htime"]>0,]
lb <- dat[dat[,"es"]=="E3",]
lb$hour <- as.factor(format(as.POSIXct(lb$entry_time, format="%Y-%m-%d %H:%M"), format="%H"))
timeofday <- data.frame()
for (i in 1:length(levels(lb$hour))) timeofday[i, 1] <- by(lb$htime, lb$hour, median)[[i]]
timeofday$hour <- 0:23
plot(timeofday$V1~timeofday$hour, type="l")
ggplot(timeofday, aes(hour, V1))
library(ggplot2)
ggplot(timeofday, aes(hour, V1))
ggplot(timeofday, aes(hour, V1)) + geom_line()
ggplot(timeofday, aes(hour, V1)) + geom_line() +
scale_x_continuous(breaks = round(seq(0, 23, by = 1),1))
ggplot(timeofday, aes(hour, V1)) + geom_line() +
scale_x_continuous(breaks = round(seq(0, 23, by = 1),1)) +
xlab("Hour of entry") + ylab("Handling time (mins)")
format(lb$entry_time, format="%H")
lb <- dat[dat[,"es"]=="E3",]
lb$hour <- as.factor(format(lb$entry_time, format="%H"))
timeofday <- data.frame()
for (i in 1:length(levels(lb$hour))) timeofday[i, 1] <- by(lb$htime, lb$hour, median)[[i]]
timeofday$hour <- 0:23
plot(timeofday$V1~timeofday$hour, type="l")
ggplot(timeofday, aes(hour, V1)) + geom_line() +
scale_x_continuous(breaks = round(seq(0, 23, by = 1),1)) +
xlab("Hour of entry") + ylab("Handling time (mins)")
format(lb$entry_time, format="%d")
weekdays(lb$date_entry)
lb$day <- weekdays(lb$date_entry)
weekdays()
weekdays(x=as.Date(seq(7), origin="1950-01-01"))
lb$day <- as.factor(weekdays(lb$date_entry))
levels(lb$day)
str(lb$day)
by(lb$htime, lb$day, median)
dayofweek <- data.frame()
dayofweek$htime <- c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6)
c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6)
dayofweek$htime <- c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6)
dayofweek <- data.frame()
dayofweek$htime <- c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6)
cbind(c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6),  weekdays(x=as.Date(seq(7), origin="1950-01-01")))
dayofweek <- data.frame(cbind(c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6),
weekdays(x=as.Date(seq(7), origin="1950-01-01"))))
dayofweek
names(dayofweek) <- c("htime", "day")
ggplot(dayofweek, aes(day, htime)) + geom_line()
n
ggplot(dayofweek, aes(day, htime)) + geom_line()
dayofweek <- data.frame(cbind(c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6),
1:7))
names(dayofweek) <- c("htime", "day")
ggplot(dayofweek, aes(day, htime)) + geom_line()
format(lb$entry_time, format="%m")
unique(format(lb$entry_time, format="%m"))
monthofyear <- data.frame()
by(lb$htime, lb$month, median)
lb$month <- as.factor(format(lb$entry_time, format="%m"))
monthofyear <- data.frame()
by(lb$htime, lb$month, median)
monthofyear <- data.frame(cbind(c(20.3, 20.3, 19.5, 20.7, 20.1, 20.65),
1:6))
names(dayofweek) <- c("htime", "month")
ggplot(dayofweek, aes(month, htime)) + geom_line()
names(monthofyear) <- c("htime", "month")
ggplot(monthofyear, aes(month, htime)) + geom_line()
ggplot(timeofday, aes(hour, V1)) + geom_line() +
scale_x_continuous(breaks = round(seq(0, 23, by = 1),1)) +
xlab("Hour of entry") + ylab("Handling time (mins)")
table(lb$hour)
length(lb$hour)
1765/63690
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
str(dat)
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
#182 days, 1st Jan 2016 - 30th June 2016
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
dat <- dat[dat[,"htime"]<1000 & dat[,"htime"]>0,]
str(dat)
table(dat[,c("es", "xs")])
30*60
64000/1800
6*30
64000/180
str(dat)
head(dat)
unique(dat$vehicle_type)
table(dat[,c("es", "xs", "vehicle_type")])
unique(dat$vehicle_no)
dat[1:100,]
dat$vehicle_no
dat[9154,]
dat[9154,]
str(dat)
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
dat <- dat[dat[,"htime"]<1000 & dat[,"htime"]>0,]
lb <- dat[dat[,"es"]=="E3",]
lb$hour <- as.factor(format(lb$entry_time, format="%H"))
timeofday <- data.frame()
for (i in 1:length(levels(lb$hour))) timeofday[i, 1] <- by(lb$htime, lb$hour, median)[[i]]
timeofday$hour <- 0:23
plot(timeofday$V1~timeofday$hour, type="l")
ggplot(timeofday, aes(hour, V1)) + geom_line() +
scale_x_continuous(breaks = round(seq(0, 23, by = 1),1)) +
xlab("Hour of entry") + ylab("Handling time (mins)")
lb$day <- as.factor(weekdays(lb$date_entry))
dayofweek <- data.frame()
by(lb$htime, lb$day, median)
dayofweek <- data.frame(cbind(c(19.35, 20.6, 20.6, 20.5, 20.7, 19.5, 20.6),
1:7))
names(dayofweek) <- c("htime", "day")
ggplot(dayofweek, aes(day, htime)) + geom_line()
scale_x_continuous(breaks = round(seq(0, 23, by = 1),1)) +
xlab("Hour of entry") + ylab("Handling time (mins)")
lb$month <- as.factor(format(lb$entry_time, format="%m"))
monthofyear <- data.frame()
by(lb$htime, lb$month, median)
monthofyear <- data.frame(cbind(c(20.3, 20.3, 19.5, 20.7, 20.1, 20.65),
1:6))
names(monthofyear) <- c("htime", "month")
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
dat <- dat[dat[,"htime"]<1000 & dat[,"htime"]>0,]
str(dat)
table(dat$holder)
table(is.na(dat$holder))
str(dat)
head(dat)
length(dat$ticket_no)
length(dat[1,ticket_no])
nchar(dat$ticket_no)
unique(nchar(dat$ticket_no))
table(nchar(dat$ticket_no))
str(dat$ticket_no)
str(unique(dat$ticket_no))
703117-(169886)
dat[,"date_entry"]
dat[dat[,"date_entry"]=="2016-01-03",]
dat[dat[,"date_entry"]=="2016-01-03","ticket_no"]
str(dat[dat[,"date_entry"]=="2016-01-03","ticket_no"])
str(unique(dat[dat[,"date_entry"]=="2016-01-03","ticket_no"]))
head(dat)
unique(dat$vehicle_type)
dat$holder
unique(dat$vehicle_type)
head(dat)
unique(dat$es)
unique(dat$xs)
unique(dat$card_type)
dat$card_type
table(dat$card_type)
head(dat)
nchar(dat$card_no)
table(nchar(dat$card_no))
head(dat)
str(dat$card_no)
str(unique(dat$card_no))
str(unique(dat$ticket_no))
table(dat$vehicle_no)
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
dat <- dat[dat[,"htime"]<1000 & dat[,"htime"]>0,]
unique(dat$vehicle_type)
85*3
85*4
1300 + 4*85
2000+350
100+160+1120
1640+2350+1380
85*4 + 160
1120+350
3400+500+1470
85*4
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
### LOAD
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat <- dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),]
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat <- dat[order(dat$entry_time),]
dat$htime <- as.numeric(round(difftime(dat$exit_time, dat$entry_time, units = "mins"), digits = 1))
dat <- dat[!is.na(dat[,"exit_time"]) & !is.na(dat[,"htime"]) & !is.na(dat[,"entry_time"]),]
dat <- dat[dat[,"htime"]<1000 & dat[,"htime"]>0,]
table(dat$card_no, dat$ticket_no)
dat[dat$card_no[1],]
dat[dat$card_no[2],]
dat$card_no[2]
dat$card_no[100]
dat[dat$card_no[100],]
dat[dat$card_no==dat$card_no[100],]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
str(dat[!is.na(dat[,"entry_time"]) | !is.na(dat[,"exit_time"]),])
str(dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),])
dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),"entry_time"]
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
?as.Date
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y", na.rm=T)
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$date_entry
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),"entry_time"]
plot(dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),"entry_time"])
aa <- dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),"entry_time"]
aa[1:1000]
dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),"es"]
table(dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),"es"])
aa <- dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),c("entry_time", "es")]
aa[1:1000,]
aa[aa[,"es"]=="E3",]
aa[aa[,"es"]=="E3" & !is.na(aa[,"es"]),]
str(aa[aa[,"es"]=="E3" & !is.na(aa[,"es"]),])
aa <- dat[is.na(dat[,"entry_time"]) | is.na(dat[,"exit_time"]),c("entry_time", "exit_time","es")]
aa[aa[,"es"]=="E3" & !is.na(aa[,"es"]),]
dat[is.na(dat[,"entry_time"]),"entry_time"]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
### LOAD
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat$date_entry <- matrix(unlist(strsplit(dat$entry_time, " ")), ncol=2, byrow = T)[,1]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat$date_entry <- NA
dat[!is.na(dat[,"entry_time"]),"date_entry"] <- matrix(unlist(strsplit(dat[!is.na(dat[,"entry_time"]),"date_entry"], " ")), ncol=2, byrow = T)[,1]
rm(list=ls())
setwd("/Users/giacomodc/Dropbox/PhD/RAW/gantry")
library(ggplot2)
dat <- read.csv("gantry.csv", stringsAsFactors = FALSE, header=T, na.strings=c("","NA"))
names(dat) <- c("x", "ticket_no", "vehicle_type", "holder", "es", "entry_time", "xs","exit_time", "parked_time", "paid_amount", "card_type", "card_no", "vehicle_no")
dat$date_entry <- NA
strsplit(dat[!is.na(dat[,"entry_time"]),"date_entry"], " ")
matrix(unlist(strsplit(dat[!is.na(dat[,"entry_time"]),"entry_time"], " ")), ncol=2, byrow = T)[,1]
dat[!is.na(dat[,"entry_time"]),"date_entry"] <- matrix(unlist(strsplit(dat[!is.na(dat[,"entry_time"]),"entry_time"], " ")), ncol=2, byrow = T)[,1]
str(dat[is.na(dat[,"date_entry"]),])
dat[is.na(dat[,"date_entry"]),"date_entry"]
dat$date_entry <- as.Date(dat$date_entry, format="%d/%m/%y")
dat$entry_time <- as.POSIXct(dat$entry_time, format="%d/%m/%y %H:%M:%S")
dat$exit_time <- as.POSIXct(dat$exit_time, format="%d/%m/%y %H:%M:%S")
dat$htime <- NA
dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),"htime"]
as.numeric(round(difftime(dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),"exit_time"], dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),"entry_time"], units = "mins"), digits = 1))
dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),"htime"] <- as.numeric(round(difftime(dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),"exit_time"], dat[!is.na(dat[,"entry_time"]) & !is.na(dat[,"exit_time"]),"entry_time"], units = "mins"), digits = 1))
dat[dat[,"htime"]<0,"htime"]
dat[dat[,"htime"]<0 & !is.na(dat[,"htime"]),"htime"]
dat[dat[,"htime"]<0 & !is.na(dat[,"htime"]),"htime"]
dat[dat[,"htime"]<0 & !is.na(dat[,"htime"]),c("htime", "entry_time", "exit_time", "es")]
dat[dat[,"htime"]>1000 & !is.na(dat[,"htime"]),c("htime", "entry_time", "exit_time", "es")]
1000/60
str(dat)
dat[dat[,"htime"]>1000 & !is.na(dat[,"htime"]),]
install.packages("devtools")
library(devtools)
install_github("andreacirilloac/ramazon")
library(ramazon)
setwd("/Users/giacomodc/Dropbox/PhD/datastories")
ramazon(public_DNS ="ec2-54-210-148-160.compute-1.amazonaws.com", key_pair_name = "mykey")
?ramazon
ramazon(Public_DNS = "ec2-54-210-148-160.compute-1.amazonaws.com", key_pair_name = "mykey")
>>>>>>> Stashed changes
