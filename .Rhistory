dat <- read.csv('data/merged.csv',stringsAsFactors = FALSE, header=T)
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
unique(dat$date)
shiny::runApp()
shiny::runApp()
shiny::runApp()
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
View(system_table)
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
View(system_table)
write.csv(system_table,file='sys_perf.csv')
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
stepplot <- dygraph(system_table,main="Total number of goods vehicles in the system") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
dyAxis("y", label="No. goods vehicles") %>%
dyAxis("x", label="Time") %>%
dyOptions(stepPlot=T,useDataTimezone = T)
if (mall_filter=='Mall 1'){
stepplot <- dyLimit(stepplot, 6, color = 'red')
}else if (mall_filter=='Mall 2'){
stepplot <- dyLimit(stepplot, 18, color = 'green')
}else{
stepplot <- dyLimit(stepplot, 6, color = 'red')
stepplot <- dyLimit(stepplot, 18, color = 'green')
}
stepplot
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
# while (max(table(no_agents[,"time"])) >1) {
#   for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
#   no_agents <- no_agents[order(no_agents[,"time"] ),]
# }
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
?write.csv
write.csv(system_table,file='sys_perf.csv')
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
View(system_table)
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
# while (max(table(no_agents[,"time"])) >1) {
#   for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
#   no_agents <- no_agents[order(no_agents[,"time"] ),]
# }
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
View(system_table)
?write.csv
View(system_table)
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
# while (max(table(no_agents[,"time"])) >1) {
#   for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
#   no_agents <- no_agents[order(no_agents[,"time"] ),]
# }
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
View(system_table)
?read.csv
?write.csv
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
# while (max(table(no_agents[,"time"])) >1) {
#   for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
#   no_agents <- no_agents[order(no_agents[,"time"] ),]
# }
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
write.csv(system_table,file='sys_perf.csv',row.names=F)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
View(system_table)
system_table$time <- as.POSIXct(system_table$time, format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
View(system_table)
View(system_table)
shiny::runApp()
strsplit('2x3',split='x')
strsplit('x245',split='x')[2]
strsplit('x245',split='x')[1]
unlist(strsplit('x245',split='x'))
unlist(strsplit('x245',split='x'))[2]
names(system_table) <- unlist(strsplit(names(system_table),'x'))[2]
View(system_table)
unlist(strsplit(names(system_table),'x'))[2]
unlist(strsplit(names(system_table),'x'))[2]
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
unlist(strsplit(names(system_table),'x'))[2]
strsplit(names(system_table),'X')
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
names(system_table) <- unlist(strsplit(names(system_table),'X'))[2]
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
unlist(strsplit(names(system_table),"X"))
filter(length,unlist(strsplit(names(system_table),"X")))
a <- unlist(strsplit(names(system_table),"X"))
a
a[lengths(a) > 0]
list(a)
a <- strsplit(names(system_table),"X")
a
a[lengths(a) > 0]
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
nametemp <- list(unlist(strsplit(names(system_table),'X')))
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
nametemp <- unlist(strsplit(names(system_table),'X'))
nametemp[lapply(nametemp,length)>0]
length(nametemp)
unlist(nametemp)
length(unlist(nametemp))
length(nametemp)
length(nametemp[2])
length(nametemp[1])
lengths(nametemp)
lengths(nametemp[1])
lengths(nametemp[2])
lengths(nametemp[1])
nametemp
as.list(nametemp)
nametemp <- strsplit(names(system_table),'X')
nametemp[lengths(nametemp) > 1]
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
nametemp <- strsplit(names(system_table),'X')
nametemp[lengths(nametemp) > 1]
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
nametemp <- strsplit(names(system_table),'X')
nametemp
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
nametemp <- unlist(strsplit(names(system_table),'X'))
unique(nametemp)
nametemp[nametemp!='']
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
nametemp <- unlist(strsplit(names(system_table),'X'))
names(system_table) <- nametemp[nametemp!='']
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
View(system_table)
unique(dat)
unique(dat$date)
dat <- read.csv('data/final.csv',stringsAsFactors = FALSE, header=T)
dat[,"entry_time"] <- as.POSIXct(dat[,"entry_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
dat[,"exit_time"] <- as.POSIXct(dat[,"exit_time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
input_time <- c('6:00:00','18:00:00')
time_filter <- c(6,18)
park_location <- NULL
start <- Sys.time()
temp <- dat
temp <- temp[!is.na(temp[,"entry_time"]) & !is.na(temp[,"exit_time"]),c("park_location", "entry_time", "exit_time", "dtime")]
if (!is.null(park_location)){
temp <- subset(temp,temp$park_location %in% park_location)
}
entries <- data.frame(cbind(as.character(temp[,"entry_time"]), rep(1,length(temp[,"entry_time"]))), stringsAsFactors=F)
exits <- data.frame(cbind(as.character(temp[,"exit_time"]), rep(-1,length(temp[,"exit_time"]))), stringsAsFactors=F)
no_agents <- rbind(entries, exits)
names(no_agents)[1] <- "time"
no_agents[,"time"] <- as.POSIXct(no_agents[,"time"], format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
no_agents <- no_agents[order(no_agents[,"time"] ),]
# while (max(table(no_agents[,"time"])) >1) {
#   for (i in 2:(nrow(no_agents)-1)) if (no_agents[i,"time"]==no_agents[i-1,"time"]) no_agents[i,"time"] <- no_agents[i,"time"]+1
#   no_agents <- no_agents[order(no_agents[,"time"] ),]
# }
no_agents[,2] <- as.numeric(no_agents[,2])
no_agents[,3] <- NA
no_agents[1,3] <- no_agents[1,2]
for (j in 2:nrow(no_agents)) no_agents[j,3] <- no_agents[j-1,3]+no_agents[j,2]
no_agents <- no_agents[,c(1,3)]
names(no_agents) <- c('time','number')
no_agents$date <- date(no_agents$time)
year(no_agents$time) <- 2016
month(no_agents$time) <- 1
day(no_agents$time) <- 1
system_table <- no_agents
dates <- unique(system_table$date)
system_table[2] <- NULL
system_table[2] <- NULL
for (i in 1:length(dates)){
temp <- subset(no_agents,no_agents$date==dates[i])
system_table <- merge(system_table,temp[c(1,2)],by='time',all.x=TRUE)
names(system_table)[length(names(system_table))] <- as.character(dates[i])
}
system_table[1,-1] <- 0
system_table[-1] <- na.locf(system_table[-1])
View(system_table)
write.csv(system_table,file='sys_perf.csv',row.names=F)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = FALSE, header=T)
View(system_table)
?read.csv
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = TRUE, header=T, )
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = TRUE, header=T )
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T,dec='-')
View(system_table)
nametemp <- gsub('.','-',nametemp)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T)
nametemp <- unlist(strsplit(names(system_table),'X'))
nametemp <- gsub('.','-',nametemp)
names(system_table) <- nametemp[nametemp!='']
View(system_table)
gsub('.','-','ab.c')
names(system_table) <- unique(dat$date)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T)
names(system_table) <- unique(dat$date)
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T)
names(system_table) <- c('time',unique(dat$date))
View(system_table)
unique(dat$date)
input_date <- c('2015-06-24','2015-06-25')
system_table <- system_table[,input_date]
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T)
names(system_table) <- c('time',unique(dat$date))
system_table$time <- as.POSIXct(system_table$time, format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
system_table <- system_table[,input_date]
stepplot <- dygraph(system_table,main="Total number of goods vehicles in the system") %>%
dyHighlight(highlightCircleSize = 3, highlightSeriesBackgroundAlpha = 0.2, hideOnMouseOut = FALSE) %>%
dyLegend(labelsSeparateLines=T, width=170) %>%
<<<<<<< HEAD
dyAxis("y", label="No. goods vehicles") %>%
dyAxis("x", label="Time") %>%
dyOptions(stepPlot=T,useDataTimezone = T)
if (mall_filter=='Mall 1'){
stepplot <- dyLimit(stepplot, 6, color = 'red')
}else if (mall_filter=='Mall 2'){
stepplot <- dyLimit(stepplot, 18, color = 'green')
}else{
stepplot <- dyLimit(stepplot, 6, color = 'red')
stepplot <- dyLimit(stepplot, 18, color = 'green')
}
stepplot
shiny::runApp()
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T)
names(system_table) <- c('time',unique(dat$date))
system_table$time <- as.POSIXct(system_table$time, format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
system_table <- system_table[,input_date]
View(system_table)
system_table <- read.csv('data/sys_perf.csv',stringsAsFactors = F, header=T)
names(system_table) <- c('time',unique(dat$date))
system_table$time <- as.POSIXct(system_table$time, format="%Y-%m-%d %H:%M:%S", tz="Asia/Singapore")
system_table <- xts(system_table[,-1],order.by=system_table[,1],tz='Asia/Singapore')
View(system_table)
shiny::runApp()
shiny::runApp()
library(rsconnect)
rsconnect::deployApp('/Users/GZQ/Desktop/SMART/datastories')
View(system_table)
=======
dyAxis("y", label="No. vehicles observed") %>%
dyAxis("x", label="Start of interval") %>%
dyOptions(useDataTimezone = F)
>>>>>>> origin/master
<<<<<<< Updated upstream
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> giacomodc/master
=======
>>>>>>> giacomodc/master
>>>>>>> master
=======
shiny::runApp()
>>>>>>> Stashed changes
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Desktop/new')
shiny::runApp()
>>>>>>> giacomodc/master
shiny::runApp()
shiny::runApp()
shiny::runApp()
?menuItem
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?icon
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?geom_histogram
shiny::runApp()
shiny::runApp()
?binwidth
??binwidth
?geom_histogram
shiny::runApp()
dat$htime
range(dat$htime)
max(dat$htime)
shiny::runApp()
?seq
shiny::runApp()
library(rsconnect)
rsconnect::deployApp('/Users/GZQ/Desktop/SMART/datastories/')
